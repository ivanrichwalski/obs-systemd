#!/bin/bash

# Script name for error messages
PROGNAME=$( basename $0 )

# Read settings from available config file
if [[ -z "$XDG_CONFIG_HOME" ]]
then
	CFG="$HOME/.config"
else
	CFG="${XDG_CONFIG_HOME}"
fi

CFG="${CFG}/obs-stream.conf"

if [[ -r "${CFG}" ]]
then
	source ${CFG}
fi

# Optional parameter for sunwait
if [[ -n "${SUNRISE_OFFSET}" ]] && (( ${SUNRISE_OFFSET} != 0 ))
then
	SUNRISE_OFFSET="offset ${SUNRISE_OFFSET}"
fi

# Either "stream" for production, or "recording" for testing
#OUTPUT="recording"
OUTPUT="stream"

# Location to calculate sunrise/sunset times
LOCATION="${LATITUDE} ${LONGITUDE}"

# Opening/starting soon scene
SCENESTART="Opening 0"

# Scene when the stream is "live"
SCENELIVE="CoopCam 3"

if [[ ! -x /usr/bin/obs ]]
then
	echo "${PROGNAME}: Unable to run OBS"
	exit 1
fi

if [[ ! -x ${HOME}/bin/ydotool ]]
then
	echo "${PROGNAME}: Unable to run ydotool"
	exit 1
fi

if [[ ! -x ${HOME}/bin/obs-cli ]]
then
	echo "${PROGNAME}: Unable to run obs-cli"
	exit 1
fi

# Write today's sunset time to be used in the on screen display
SUNSET=$( date --date=$(sunwait ${LOCATION} list sunset) +%l:%M%P )
echo "sunsettime='${SUNSET}';" >~/OBS/clock/sunset.js

# Nice message for the log
SUNRISE=$( sunwait ${LOCATION} list rise ${SUNRISE_OFFSET} )
echo "${PROGNAME}: Waiting for sunrise at ${SUNRISE}"

# Wait for sunrise
sunwait ${LOCATION} wait rise ${SUNRISE_OFFSET}

# Set the the screen blank delay to never blank
# the screen, and disable the screensaver
gsettings set org.gnome.desktop.session idle-delay 0
gnome-screensaver-command -d

# Start OBS; give it a few seconds to load
# Pass environment variable to avoid an
# issue with docks when running under Wayland
# https://github.com/obsproject/obs-studio/issues/4435
QT_QPA_PLATFORM=xcb /usr/bin/obs &
sleep 5

# Switch to the intro scene
obs-cli scene current ${SCENESTART}

# Start the network stream
obs-cli ${OUTPUT} start

# Time for intro to play
sleep 30

# Start the scene switching process in the background
${HOME}/bin/scene-switcher &

#### Switch to the main live stream scene
###obs-cli scene current ${SCENELIVE}
